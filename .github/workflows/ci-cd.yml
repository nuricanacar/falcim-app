name: Falcım App CI/CD

on:
  push:
    branches: ["main"] # Sadece main branch'e push yapıldığında tetiklensin
  pull_request:
    branches: ["main"] # Main branch'e PR açıldığında da tetiklensin (opsiyonel, build/test için)

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    # Sadece main branch'e push yapıldığında çalışsın (PR için değil)
    if: github.event_name == 'push'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Docker Hub, GitHub Container Registry (GHCR), AWS ECR vb. bir registry'ye login olunmalı
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Docker buildx kur (multi-platform build vb. için daha modern)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Docker imajını build et ve Registry'ye push et
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/falcim-app:${{ github.sha }}, ${{ secrets.DOCKERHUB_USERNAME }}/falcim-app:latest # Commit hash ve latest tag'i
          cache-from: type=gha # GitHub Actions cache'ini kullan
          cache-to: type=gha,mode=max
          # Build sırasında argüman gerekirse:
          # build-args: |
          #   SOME_BUILD_ARG=value

  deploy:
    needs: build_and_push # build_and_push işi bittikten sonra başla
    runs-on: ubuntu-latest
    # Sadece main branch'e push yapıldığında çalışsın
    if: github.event_name == 'push'

    steps:
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }} # Bu kullanıcının docker grubunda olduğundan emin olun!
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_PORT || 22 }}
          script: |
            set -e # Hata durumunda dur

            echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/falcim-app:${{ github.sha }}
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/falcim-app:latest

            docker run --rm \
              -e DATABASE_URL=${{ secrets.SERVER_DATABASE_URL }} \
              ${{ secrets.DOCKERHUB_USERNAME }}/falcim-app:${{ github.sha }} \
              npx prisma migrate deploy

            # Mevcut konteyneri durdur/kaldır
            docker stop falcim-app-prod || true
            docker rm falcim-app-prod || true

            # Yeni konteyneri başlat - Satır sonlarındaki '\' karakterlerine dikkat!
            docker run -d \
            --name falcim-app-prod \
            --network falcim-network \ # Buraya eklendi!
            -p 80:6060 \
            --restart unless-stopped \
            -e NODE_ENV=production \
            -e PORT=6060 \
            -e DATABASE_URL=${{ secrets.SERVER_DATABASE_URL }} \ # Bu secret'ın güncellendiğinden emin olun!
            -e JWT_SECRET=${{ secrets.SERVER_JWT_SECRET }} \
            ${{ secrets.DOCKERHUB_USERNAME }}/falcim-app:${{ github.sha }}

            docker image prune -f
